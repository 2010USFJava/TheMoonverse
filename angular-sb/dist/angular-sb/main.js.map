{"version":3,"sources":["./src/app/user.ts","./src/app/employee-details/employee-details.component.ts","./src/environments/environment.ts","./src/app/posts/posts.component.ts","./src/app/posts/posts.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/employee.ts","./src/app/profile/profile.component.ts","./src/app/profile/profile.component.html","./src/app/app.module.ts","./src/app/user-details/user-details.component.ts","./src/app/user-details/user-details.component.html","./src/app/create-user/create-user.component.ts","./src/app/create-user/create-user.component.html","./src/app/update-employee/update-employee.component.ts","./src/app/update-employee/update-employee.component.html","./src/app/update-user/update-user.component.ts","./src/app/update-user/update-user.component.html","./src/app/employee.service.ts","./src/app/create-employee/create-employee.component.ts","./src/app/app-routing.module.ts","./src/app/employee-list/employee-list.component.ts","./src/app/employee-list/employee-list.component.html","./src/app/user.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["export class User {\n        userId:string;\n        email:string;\n        password:string;\n        firstName:string;\n        lastName:string;\n        numberPosts:number;\n        isAdmin:boolean;\n        birthDate:string;\n    }\n    \n\n","import { User } from '../user';\nimport { Component, OnInit, Input } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { UserService } from '../user.service';\n\n@Component({\n  selector: 'app-employee-details',\n  templateUrl: './employee-details.component.html',\n  styleUrls: ['./employee-details.component.css']\n})\nexport class EmployeeDetailsComponent implements OnInit {\n\n \n\n  ngOnInit() {\n    \n  }\n\n  \n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-posts',\n  templateUrl: './posts.component.html',\n  styleUrls: ['./posts.component.css']\n})\nexport class PostsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>posts works!</p>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'The MoonVerse';\n}\n","<nav class=\"navbar navbar-expand-sm bg-primary navbar-dark\">\n  <!-- Links -->\n  <ul class=\"navbar-nav\">\n    <li class=\"nav-item\">\n      <a routerLink=\"home\" class=\"nav-link\" routerLinkActive=\"active\">Home</a>\n  </li>\n    <li class=\"nav-item\">\n        <a routerLink=\"employees\" class=\"nav-link\" routerLinkActive=\"active\">Feed</a>\n    </li>\n    <li class=\"nav-item\">\n        <a routerLink=\"add\" class=\"nav-link\" routerLinkActive=\"active\">Create New Profile</a>\n    </li>\n    \n  </ul>\n</nav>\n<div class=\"container\">\n  <br>\n  <h2 style=\"text-align: center;\">{{title}}</h2>\n  <hr>  \n  <div class=\"card\">\n    <div class=\"card-body\">\n  <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n\n<footer class=\"footer\">\n  <div class=\"container\">\n      <span>All Rights Reserved 2020 MoonVerse </span>\n  </div>\n</footer>","export class Employee {\n\n    id!:number;\n    firstName!:string;\n    lastName!:string;\n    emailId!:string;\n    active!:boolean;\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>profile works!</p>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CreateEmployeeComponent } from './create-employee/create-employee.component';\nimport { EmployeeDetailsComponent } from './employee-details/employee-details.component';\nimport { EmployeeListComponent } from './employee-list/employee-list.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { UpdateEmployeeComponent } from './update-employee/update-employee.component';\nimport { UserDetailsComponent } from './user-details/user-details.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { PostsComponent } from './posts/posts.component';\nimport { CreateUserComponent } from './create-user/create-user.component';\nimport { UpdateUserComponent } from './update-user/update-user.component';\n@NgModule({\n  declarations: [\n    AppComponent,\n    CreateEmployeeComponent,\n    EmployeeDetailsComponent,\n    EmployeeListComponent,\n    UpdateEmployeeComponent,\n    UserDetailsComponent,\n    ProfileComponent,\n    PostsComponent,\n    CreateUserComponent,\n    UpdateUserComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }","import { Component, OnInit } from '@angular/core';\nimport {User} from '../user';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { UserService } from '../user.service';\n\n@Component({\n  selector: 'app-user-details',\n  templateUrl: './user-details.component.html',\n  styleUrls: ['./user-details.component.css']\n})\nexport class UserDetailsComponent implements OnInit {\n  userId: number;\n  user: User;\n\n  constructor(private route: ActivatedRoute,private router: Router,\n    private userService: UserService) { }\n\n  ngOnInit() {\n    this.user = new User();\n\n    this.userId = this.route.snapshot.params['userId'];\n    \n    this.userService.getUser(this.userId)\n      .subscribe(data => {\n        console.log(data)\n        this.user = data;\n      }, error => console.log(error));\n  }\n\n  list(){\n    this.router.navigate(['user']);\n  }\n}","<h2>User Profile</h2> \n\n\tprivate String aboutMe;\n\tprivate int age;\n\tprivate String city;\n\tprivate String profession;\n\tprivate String favoritePlanet;\n\tprivate String profilePicture;\n\n<hr/>\n<div *ngIf=\"user\">\n  <div>\n    <label><b>First Name: </b></label> {{user.firstName}}\n  </div>\n  <div>\n    <label><b>Last Name: </b></label> {{user.lastName}}\n    <label><b>Your star level is</b></label>{{user.countLikes}}\n    <label><b>Favorite Planet:</b></label>{{profile.favoritePlanet}}\n  </div>\n  <div class=\"container-md\">\n    <label><b>Posts </b></label> <br/> {{user.postText}}\n    <img size= 15% src={{profile.profilePicture}} alt=\"\">\n  </div>  \n</div>\n\n<br>\n<br>\n<button (click)=\"list()\" class=\"btn btn-primary\">Back to Employee List</button><br>","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../user.service';\nimport { User } from '../user';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-create-user',\n  templateUrl: './create-user.component.html',\n  styleUrls: ['./create-user.component.css']\n})\n\nexport class CreateUserComponent implements OnInit {\n\n  user: User = new User();\n  submitted = false;\n\n  constructor(private userService: UserService,\n    private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  newUser(): void {\n    this.submitted = false;\n    this.user = new User();\n  }\n\n  save() {\n    this.userService\n    .createUser(this.user).subscribe(data => {\n      console.log(data)\n      this.user = new User();\n      this.gotoList();\n    }, \n    error => console.log(error));\n  }\n\n  onSubmit() {\n    this.submitted = true;\n    this.save();    \n  }\n\n  gotoList() {\n    this.router.navigate(['/user']);\n  }\n}","<h3>Create new MoonVerse account!</h3>\n<div [hidden]=\"submitted\" style=\"width: 400px;\">\n  <form (ngSubmit)=\"onSubmit()\">\n   \n\n    <div class=\"form-group\">\n      <label for=\"name\">Email Id</label>\n      <input type=\"text\" class=\"form-control\" id=\"email\" required [(ngModel)]=\"user.email\" name=\"email\">\n    </div>\n\n   <div class=\"form-group\">\n      <label for=\"name\">Password </label>\n      <input type=\"text\" class=\"form-control\" id=\"password\" required [(ngModel)]=\"user.password\" name=\"password\">\n    </div>\n\n    <div class=\"form-group\">\n        <label for=\"name\">First Name</label>\n        <input type=\"text\" class=\"form-control\" id=\"firstName\" required [(ngModel)]=\"user.firstName\" name=\"firstName\">\n      </div>\n\n    <div class=\"form-group\">\n      <label for=\"name\">Last Name</label>\n      <input type=\"text\" class=\"form-control\" id=\"lastName\" required [(ngModel)]=\"user.lastName\" name=\"lastName\">\n    </div>\n\n    <div class=\"form-group\">\n        <label for=\"name\">Birthdate</label>\n        <input type=\"text\" class=\"form-control\" id=\"birthDate\" required [(ngModel)]=\"user.birthDate\" name=\"birthDate\">\n      </div>\n   \n\n    <button type=\"submit\" class=\"btn btn-success\">Submit</button>\n  </form>\n</div>\n\n<div [hidden]=\"!submitted\">\n  <h4>You now exist in The MoonVerse!!!</h4>\n  <!-- <button class=\"btn btn-success\" (click)=\"newuser()\">Add</button> -->\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Employee } from '../employee';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { EmployeeService } from '../employee.service';\n\n@Component({\n  selector: 'app-update-employee',\n  templateUrl: './update-employee.component.html',\n  styleUrls: ['./update-employee.component.css']\n})\nexport class UpdateEmployeeComponent implements OnInit {\n\n  id: number;\n  employee: Employee;\n\n  constructor(private route: ActivatedRoute,private router: Router,\n    private employeeService: EmployeeService) { }\n\n  ngOnInit() {\n    this.employee = new Employee();\n\n    this.id = this.route.snapshot.params['id'];\n    \n    this.employeeService.getEmployee(this.id)\n      .subscribe(data => {\n        console.log(data)\n        this.employee = data;\n      }, error => console.log(error));\n  }\n\n  updateEmployee() {\n    this.employeeService.updateEmployee(this.id, this.employee)\n      .subscribe(data => {\n        console.log(data);\n        this.employee = new Employee();\n        this.gotoList();\n      }, error => console.log(error));\n  }\n\n  onSubmit() {\n    this.updateEmployee();    \n  }\n\n  gotoList() {\n    this.router.navigate(['/employees']);\n  }\n}","<h3>Update Employee</h3>\n<div style=\"width: 400px;\">\n  <form (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n      <label for=\"name\">First Name</label>\n      <input type=\"text\" class=\"form-control\" id=\"firstName\" required [(ngModel)]=\"employee.firstName\" name=\"firstName\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"name\">Last Name</label>\n      <input type=\"text\" class=\"form-control\" id=\"lastName\" required [(ngModel)]=\"employee.lastName\" name=\"lastName\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"name\">Email Id</label>\n      <input type=\"text\" class=\"form-control\" id=\"emailId\" required [(ngModel)]=\"employee.emailId\" name=\"emailId\">\n    </div>\n\n    <button type=\"submit\" class=\"btn btn-success\">Submit</button>\n  </form>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { User } from '../user';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { UserService } from '../user.service';\n\n@Component({\n  selector: 'app-update-user',\n  templateUrl: './update-user.component.html',\n  styleUrls: ['./update-user.component.css']\n})\nexport class UpdateUserComponent implements OnInit {\n\n  userId: number;\n  user: User;\n\n  constructor(private route: ActivatedRoute,private router: Router,\n    private userService: UserService) { }\n\n  ngOnInit() {\n    this.user = new User();\n\n    this.userId = this.route.snapshot.params['iuserId'];\n    \n    this.userService.getUser(this.userId)\n      .subscribe(data => {\n        console.log(data)\n        this.user = data;\n      }, error => console.log(error));\n  }\n\n  updateEmployee() {\n    this.userService.updateUser(this.userId, this.user)\n      .subscribe(data => {\n        console.log(data);\n        this.user = new User();\n        this.gotoList();\n      }, error => console.log(error));\n  }\n\n  onSubmit() {\n    this.updateEmployee();    \n  }\n\n  gotoList() {\n    this.router.navigate(['/employees']);\n  }\n}","<h3>Update Moo</h3>\n<div style=\"width: 400px;\">\n  <form (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n      <label for=\"name\">First Name</label>\n      <input type=\"text\" class=\"form-control\" id=\"firstName\" required [(ngModel)]=\"user.firstName\" name=\"firstName\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"name\">Last Name</label>\n      <input type=\"text\" class=\"form-control\" id=\"lastName\" required [(ngModel)]=\"user.lastName\" name=\"lastName\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"name\">Email Id</label>\n      <input type=\"text\" class=\"form-control\" id=\"emailId\" required [(ngModel)]=\"user.email\" name=\"emailId\">\n    </div>\n\n    <button type=\"submit\" class=\"btn btn-success\">Submit</button>\n  </form>\n</div>","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeeService {\n  private baseUrl= 'http://localhost:8080/springboot-crud-rest/api/v1/employees'\n  http: any;\n \n\n  constructor() { }\n\n  getEmployee(id: number): Observable<any> {\n    return this.http.get(`${this.baseUrl}/${id}`);\n  }\n\n  createEmployee(employee: Object): Observable<Object> {\n    return this.http.post(`${this.baseUrl}`, employee);\n  }\n\n  updateEmployee(id: number, value: any): Observable<Object> {\n    return this.http.put(`${this.baseUrl}/${id}`, value);\n  }\n\n  deleteEmployee(id: number): Observable<any> {\n    return this.http.delete(`${this.baseUrl}/${id}`, { responseType: 'text' });\n  }\n\n  getEmployeesList(): Observable<any> {\n    return this.http.get(`${this.baseUrl}`);\n  }\n}\n","import { EmployeeService } from '../employee.service';\nimport { Employee } from '../employee';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-create-employee',\n  templateUrl: './create-employee.component.html',\n  styleUrls: ['./create-employee.component.css']\n})\nexport class CreateEmployeeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  \n}","\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UpdateEmployeeComponent } from './update-employee/update-employee.component';\nimport { CreateUserComponent } from './create-user/create-user.component';\nimport { UserDetailsComponent } from './user-details/user-details.component';\nimport { ProfileComponent } from './profile/profile.component';\n\nconst routes: Routes = [\n  { path: 'home', redirectTo: 'index', pathMatch: 'full' },\n  { path: 'user', component: ProfileComponent },\n  { path: 'add', component: CreateUserComponent },\n  { path: 'update/:id', component: UpdateEmployeeComponent },\n  { path: 'details/:id', component: UserDetailsComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }","import { Component, OnInit } from '@angular/core';\nimport { Employee } from '../employee';\nimport {Observable} from 'rxjs';\nimport { EmployeeService } from '../employee.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-employee-list',\n  templateUrl: './employee-list.component.html',\n  styleUrls: ['./employee-list.component.css']\n})\nexport class EmployeeListComponent implements OnInit {\n  employees:Observable<Employee[]>;\n\n  constructor(private EmployeeService:EmployeeService,private router:Router) { }\n\n  ngOnInit(): void {\n  }\n\n  reloadData(){\n    this.employees=this.EmployeeService.getEmployeesList();\n  }\n\n  deleteEmployee(id: number) {\n    this.EmployeeService.deleteEmployee(id)\n      .subscribe(\n        data => {\n          console.log(data);\n          this.reloadData();\n        },\n        error => console.log(error));\n  }\n\nemployeeDetails(id:number){\n  this.router.navigate(['details',id]);\n}\n\n}\n","<div class=\"panel panel-primary\">\n    <div class=\"panel-heading\">\n      <h2>Employee List</h2>\n    </div>\n    <div class=\"panel-body\">\n      <table class=\"table table-striped\">\n        <thead>\n          <tr>\n            <th>Firstname</th>\n            <th>Lastname</th>\n            <th>Email</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let employee of employees | async\">\n            <td>{{employee.firstName}}</td>\n            <td>{{employee.lastName}}</td>\n            <td>{{employee.emailId}}</td>\n            <td><button (click)=\"deleteEmployee(employee.id)\" class=\"btn btn-danger\">Delete</button>\n                <button (click)=\"employeeDetails(employee.id)\" class=\"btn btn-info\" style=\"margin-left: 10px\">Details</button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  private baseUrl= 'http://localhost:8080'\n  http: any;\n  constructor() { }\n\n  getUser(userId: number): Observable<any> {\n    return this.http.get(`${this.baseUrl}/${userId}`);\n  }\n\n  createUser(user: Object): Observable<Object> {\n    return this.http.post(`${this.baseUrl}`, user);\n  }\n\n  updateUser(userId: number, value: any): Observable<Object> {\n    return this.http.put(`${this.baseUrl}/${userId}`, value);\n  }\n\n  deleteUser(userId: number): Observable<any> {\n    return this.http.delete(`${this.baseUrl}/${userId}`, { responseType: 'text' });\n  }\n\n  getUsersList(): Observable<any> {\n    return this.http.get(`${this.baseUrl}`);\n  }\n}\n\n\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}